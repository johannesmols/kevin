{"version":3,"sources":["config.js","helpers/prepareData.js","components/Diagrams.js","helpers/spreadsheet.js","components/App.js","serviceWorker.js","index.js","logo.svg"],"names":["config","apiKey","discoveryDocs","spreadsheetId","arrayAverage","array","reduce","a","b","length","prepareNationalitaetenVerteilung","data","teamOrEnemies","nationalities","forEach","entry","team_land","gegner_land","split","country","push","returnArray","alreadyCalculatedCountries","nation","includes","countOccurrences","value","counter","map","percentageTrue","filter","e","geochart_options","region","resolution","displayMode","magnifyingGlass","enable","zoomFactor","colorAxis","minValue","colors","tilt_options","title","focusTarget","vAxis","hack_call_options","maxValue","trendline_options","hAxis","viewWindowMode","legend","trendlines","0","type","lineWidth","opacity","Diagrams","state","loading","error","entries","results","start","window","gapi","client","init","then","callback","_this","onLoad","load","sheets","spreadsheets","values","get","range","valueRenderOption","response","result","datum","rank","prime","kevin_anwesend","kevin_toxicity","kevin_hack_call","kevin_stats","kevin_hltv_rating","ergebnis","team_hack_call","joe_tilt","jakob_tilt","mika_tilt","match_link","anmerkung","setState","this","react_default","createElement","className","react_spinners","color","id","Panel","defaultExpanded","Heading","Title","toggle","Collapse","Body","index_esm","chartType","maps","alreadyCountedMaps","prepareMapVerteilung","graph_id","width","height","legend_toggle","preparedData","joe","joe_k","jakob","jakob_k","mika","mika_k","Number","concat","prepareTiltLevel","options","kevin","team","team_ohne_kevin","uebereinstimmung","index","kevin_prime","team_prime","team_o_k_hack_call","team_o_k_prime","uebereinstimmung_p","prepareHackCallDatenColumn","prepareHackCallDaten","loader","console","log","prepareToxicRatingScatterchart","Component","App","src_components_Diagrams","src","react_logo","alt","target","rel","href","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5da8176a.chunk.js","sourcesContent":["export default {\n  apiKey: \"AIzaSyD3HU2wG3tzEK-Zf57BCeVz6FhE7BEwnnA\",\n  discoveryDocs: \n    [\"https://sheets.googleapis.com/$discovery/rest\"],\n  spreadsheetId: \"1OHd_uNLhKvi1kKdUXUlVTKnf_xCQYiWhDqU8jotJyrY\"\n};","const arrayAverage = array => array.reduce((a,b) => a + b, 0) / array.length;\n\nexport function prepareMapVerteilung(data) {\n    // put all maps into an array\n    let maps = [];\n    data.forEach(entry => {\n        maps.push(entry.map);\n    });\n\n    // count how often each map is contained in the array\n    let returnArray = [[\"Maps\", \"Anzahl\"]];\n    let alreadyCountedMaps = [];\n    maps.forEach(map => {\n        if (!alreadyCountedMaps.includes(map)) {\n            returnArray.push([map, countOccurrences(maps, map)]);\n            alreadyCountedMaps.push(map);\n        }\n    });\n    \n    return returnArray;\n}\n\nexport function prepareNationalitaetenVerteilung(data, teamOrEnemies) {\n    // Nationalitäten in Array machen\n    let nationalities = [];\n    data.forEach(entry => {\n        if ((teamOrEnemies && entry.team_land) || (!teamOrEnemies && entry.gegner_land)) {\n            let splitted = teamOrEnemies ? entry.team_land.split(',') : entry.gegner_land.split(',');\n            splitted.forEach(country => {\n                nationalities.push(country);\n            });\n        }\n    });\n\n    // Prozentzahlen berechnen\n    let returnArray = [[\"Nationalität\", \"Verteilung in Prozent\"]];\n    let alreadyCalculatedCountries = [];\n    nationalities.forEach(nation => {\n        if (!alreadyCalculatedCountries.includes(nation)) {\n            returnArray.push([nation, (countOccurrences(nationalities, nation) / nationalities.length) * 100]);\n            alreadyCalculatedCountries.push(nation);\n        }\n    });\n\n    return returnArray;\n}\n\nexport function prepareTiltLevel(data) {\n    let preparedData = [['Spieler', 'Tilt ohne Kevin', 'Tilt mit Kevin', 'Kombiniert']];\n\n    let joe = [], joe_k = [], jakob = [], jakob_k = [], mika = [], mika_k = [];\n    data.forEach(entry => {\n        if (entry.joe_tilt) {\n            if (entry.kevin_anwesend === 'Y') {\n                joe_k.push(Number(entry.joe_tilt));\n            } else {\n                joe.push(Number(entry.joe_tilt));\n            }\n        }\n        if (entry.jakob_tilt) {\n            if (entry.kevin_anwesend === 'Y') {\n                jakob_k.push(Number(entry.jakob_tilt));\n            } else {\n                jakob.push(Number(entry.jakob_tilt));\n            }\n        }\n        if (entry.mika_tilt) {\n            if (entry.kevin_anwesend === 'Y') {\n                mika_k.push(Number(entry.mika_tilt));\n            } else {\n                mika.push(Number(entry.mika_tilt));\n            }\n        }\n    });\n\n    preparedData.push(['Joe', arrayAverage(joe), arrayAverage(joe_k), arrayAverage(joe.concat(joe_k))]);\n    preparedData.push(['Jakob', arrayAverage(jakob), arrayAverage(jakob_k), arrayAverage(jakob.concat(jakob_k))]);\n    preparedData.push(['Mika', arrayAverage(mika), arrayAverage(mika_k), arrayAverage(mika.concat(mika_k))]);\n    preparedData.push(['Gesamt', arrayAverage(joe.concat(jakob, mika)), arrayAverage(joe_k.concat(jakob_k, mika_k)), arrayAverage(joe.concat(joe_k, jakob, jakob_k, mika, mika_k))]);\n\n    return preparedData;\n}\n\nexport function prepareHackCallDatenColumn(data) {\n    let preparedData = [['Kategorie', 'Hack Call', 'Prime']];\n\n    let kevin = [], team = [], team_ohne_kevin = [], uebereinstimmung = []; \n    data.forEach(entry => {\n        if (entry.kevin_anwesend === 'Y') {\n            kevin.push([entry.kevin_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n        }\n        if (entry.team_hack_call && entry.kevin_anwesend === 'Y') {\n            team.push([entry.team_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n        }\n        if (entry.kevin_anwesend === 'N' && entry.team_hack_call) {\n            team_ohne_kevin.push([entry.team_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n        }\n        if (entry.kevin_anwesend === 'Y') {\n            if ((entry.kevin_hack_call === 'Y' && entry.team_hack_call === 'N') ||\n                (entry.kevin_hack_call === 'N' && entry.team_hack_call === 'N')) \n            {\n                uebereinstimmung.push(true);\n            } else {\n                uebereinstimmung.push(false);\n            }\n        }\n    });\n\n    let kevin_hack_call = percentageTrue(kevin.map(function(value, index) { return value[0] })); // Wie oft Kevin Hack called\n    let kevin_prime = percentageTrue(kevin.filter(e => e[0] === true).map(function(value, index) { return value[1] })); // Wie viele Matches davon Prime waren\n    let team_hack_call = percentageTrue(team.map(function(value, index) { return value[0] })); // Wie oft das Team Hack called\n    let team_prime = percentageTrue(team.filter(e => e[0] === true).map(function(value, index) { return value[1] })); // Wie viele Matches davon Prime waren\n    let team_o_k_hack_call = percentageTrue(team_ohne_kevin.map(function(value, index) { return value[0] })); // Wie oft das Team ohne Kevin Hack called\n    let team_o_k_prime = percentageTrue(team_ohne_kevin.filter(e => e[0] === true).map(function(value, index) { return value[1] })); // Wie viele Matches davon Prime waren\n    let uebereinstimmung_p = percentageTrue(uebereinstimmung);\n    \n    preparedData.push(['Kevin', kevin_hack_call, kevin_prime]);\n    preparedData.push(['Team mit Kevin', team_hack_call, team_prime]);\n    preparedData.push(['Team ohne Kevin', team_o_k_hack_call, team_o_k_prime]);\n    preparedData.push(['Zustimmung mit Kevin' , uebereinstimmung_p, 0]);\n\n    return preparedData;\n}\n\nexport function prepareHackCallDaten(data) {\n    let preparedData = [['From', 'To', 'Weight']];\n\n    let kevin = [], team = [];\n    data.forEach(entry => {\n        if (entry.kevin_anwesend && entry.kevin_hack_call) {\n            kevin.push([entry.kevin_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n            team.push([entry.team_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n        }\n    });\n    \n    preparedData.push(['Kevin', 'Hack Call', kevin.filter(e => e[0] === true).length]);\n    preparedData.push(['Kevin', 'Non-Hack Call', kevin.filter(e => e[0] === false).length]);\n    preparedData.push(['Team', 'Hack Call', team.filter(e => e[0] === true).length]);\n    preparedData.push(['Team', 'Non-Hack Call', team.filter(e => e[0] === false).length]);\n    \n    preparedData.push(['Non-Hack Call', 'Prime', \n        kevin.filter(e => e[0] === false)\n        .concat(team.filter(e => e[0] === false))\n        .filter(e => e[1] === true).length]);\n    preparedData.push(['Non-Hack Call', 'Non-Prime', \n        kevin.filter(e => e[0] === false)\n        .concat(team.filter(e => e[0] === false))\n        .filter(e => e[1] === false).length]);\n    preparedData.push(['Hack Call', 'Prime', \n        kevin.filter(e => e[0] === true)\n        .concat(team.filter(e => e[0] === true))\n        .filter(e => e[1] === true).length]);\n    preparedData.push(['Hack Call', 'Non-Prime', \n        kevin.filter(e => e[0] === true)\n        .concat(team.filter(e => e[0] === true))\n        .filter(e => e[1] === false).length]);\n\n    return preparedData;\n}\n\nexport function prepareToxicRatingScatterchart(data) {\n    let preparedData = [['Toxizität', 'HLTV Rating 1.0']];\n\n    data.forEach(entry => {\n        if (entry.kevin_anwesend === 'Y' && entry.kevin_hltv_rating && entry.kevin_toxicity) {\n            preparedData.push([Number(entry.kevin_toxicity), Number(entry.kevin_hltv_rating)]);\n        }\n    });\n\n    console.log(preparedData);\n\n    return preparedData;\n}\n\nfunction countOccurrences(data, value) {\n    let counter = 0;\n    data.forEach(map => {\n        if (value === map) {\n            counter++;\n        }\n    });\n    return counter;\n}\n\nfunction percentageTrue(data) {\n    return data.filter(e => e === true).length / data.length * 100;\n}","import React, { Component } from 'react';\nimport './Diagrams.css'\nimport config from '../config';\nimport { PacmanLoader } from 'react-spinners';\nimport { load } from '../helpers/spreadsheet';\nimport { prepareMapVerteilung, prepareNationalitaetenVerteilung, prepareTiltLevel, prepareHackCallDaten, prepareHackCallDatenColumn, prepareToxicRatingScatterchart } from '../helpers/prepareData';\nimport { Chart } from 'react-google-charts';\nimport { Panel } from 'react-bootstrap';\n\nconst geochart_options = {\n  region: '150',\n  resolution: 'countries',\n  displayMode: 'auto',\n  magnifyingGlass: {enable: true, zoomFactor: 7.5},\n  colorAxis: {minValue: 0,  colors: ['green', 'orange', 'red']}\n}\n\nconst tilt_options = {\n  title: 'Durschnittliches Tilt Level mit und ohne Kevin',\n  focusTarget: 'category',\n  vAxis: {\n    title: 'Tilt Level (1-5)',\n    minValue: 1\n  }\n}\n\nconst hack_call_options = {\n  title: 'Kevins Hack Quall Quote im Vergleich zum Team',\n  focusTarget: 'category',\n  vAxis: {\n    title: 'Prozent (0-100)',\n    minValue: 0,\n    maxValue: 100\n  }\n}\n\nconst trendline_options = {\n  hAxis: { \n    title: 'Toxizität',\n    minValue: 1,\n    maxValue: 5,\n    viewWindowMode: 'maximized'\n  },\n  vAxis: { \n    title: 'HLTV Rating 1.0'\n  },\n  legend: 'none',\n  trendlines: { 0: {\n      type: 'exponential',\n      lineWidth: 10,\n      opacity: 0.2\n    } \n  }\n}\n\nclass Diagrams extends Component {\n  state = {\n    loading: true,\n    error: null,\n    entries: [],\n    results: 0\n  };\n\n  componentDidMount() {\n    // 1. Load the JavaScript client library\n    window.gapi.load('client', this.start);\n  }\n\n  start = () => {\n    // 2. Initialize the JavaScript client library\n    window.gapi.client\n      .init({\n        apiKey: config.apiKey,\n        discoveryDocs: config.discoveryDocs\n      })\n      // 3. Initialize and make the API request\n      .then(() => {\n        load(this.onLoad);\n      });\n  };\n\n  onLoad = (data, error) => {\n    if (data) {\n      this.setState({\n        entries: data.entries,\n        results: data.entries.length,\n        loading: false\n      })\n    } else {\n      this.setState({ error, loading: false });\n    }\n  };\n\n  render() {\n    // Show Loading\n    if (this.state.loading) {\n      return (\n        <div className=\"Loading\">\n          <PacmanLoader color =\"#6aa84f\" loading={this.state.loading} />\n        </div>\n      )\n    }\n\n    // Display Graphs\n    if (this.state.entries) {\n      return (\n        <div id=\"panels\">\n          <Panel className='panel-bootstrap' id=\"panel-map-verteilung\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Map Verteilung\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"PieChart\"\n                data={prepareMapVerteilung(this.state.entries)}\n                graph_id=\"MapVerteilung\"\n                width=\"100%\"\n                height=\"400px\"\n                legend_toggle={true}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-team-tilt-level\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Tilt Level mit und ohne Kevin\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareTiltLevel(this.state.entries)}\n                graph_id=\"TiltLevel\"\n                width=\"100%\"\n                height=\"100%\"\n                legend_toggle={true}\n                options={tilt_options}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-hack-call\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Kevins Hackcall Quote im Vegleich zum Team\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n            <Chart\n                chartType=\"ColumnChart\"\n                data={prepareHackCallDatenColumn(this.state.entries)}\n                graph_id=\"HackCallColumn\"\n                width=\"100%\"\n                height=\"100%\"\n                legend_toggle={true}\n                options={hack_call_options}\n              />\n              <Chart\n                chartType=\"Sankey\"\n                data={prepareHackCallDaten(this.state.entries)}\n                graph_id=\"HackCall\"\n                width=\"100%\"\n                height=\"100%\"\n                loader = {<div>Loading Chart</div>}\n                legend_toggle={true}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-kevin-toxic-hltv-rating-correlation\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Kevins Toxizität im Kontext seiner Leistung\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"ScatterChart\"\n                data={prepareToxicRatingScatterchart(this.state.entries)}\n                graph_id=\"KevinToxicRatingScatterChart\"\n                width=\"100%\"\n                height=\"100%\"\n                legend_toggle={true}\n                options={trendline_options}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-gegner-nationalitaeten\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Gegner Nationalitäten\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"GeoChart\"\n                data={prepareNationalitaetenVerteilung(this.state.entries, false)}\n                graph_id=\"GegnerNationalitaeten\"\n                width=\"100%\"\n                height=\"500px\"\n                legend_toggle={true}\n                options={geochart_options}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-team-nationalitaeten\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Team Nationalitäten\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"GeoChart\"\n                data={prepareNationalitaetenVerteilung(this.state.entries, true)}\n                graph_id=\"TeamNationalitaeten\"\n                width=\"100%\"\n                height=\"500px\"\n                legend_toggle={true}\n                options={geochart_options}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n        </div>\n      )\n    }\n\n    // Display Error\n    return <div>{this.state.error}</div>;\n  }\n}\n\nexport default Diagrams;","import config from \"../config\";\n\n// Load the data from the spreadsheet\nexport function load(callback) {\n    window.gapi.client.load(\"sheets\", \"v4\", () => {\n        window.gapi.client.sheets.spreadsheets.values\n            .get({\n                spreadsheetId: config.spreadsheetId,\n                range: \"Daten!A6:R\",\n                valueRenderOption: \"FORMATTED_VALUE\"\n            })\n            .then(\n                response => {\n                    const data = response.result.values;\n                    let entries = \n                        data.map(entry => ({\n                            datum: entry[0],\n                            rank: entry[1],\n                            prime: entry[2],\n                            map: entry[3],\n                            team_land: entry[4],\n                            gegner_land: entry[5],\n                            kevin_anwesend: entry[6],\n                            kevin_toxicity: entry[7],\n                            kevin_hack_call: entry[8],\n                            kevin_stats: entry[9],\n                            kevin_hltv_rating: entry[10],\n                            ergebnis: entry[11],\n                            team_hack_call: entry[12],\n                            joe_tilt: entry[13],\n                            jakob_tilt: entry[14],\n                            mika_tilt: entry[15],\n                            match_link: entry[16],\n                            anmerkung: entry[17]\n                        })) || [];\n\n                    callback({\n                        entries\n                    });\n                },\n                response => {\n                    callback(false, response.result.error);\n                }\n            );\n    });\n}","import React, { Component } from 'react';\nimport react_logo from '../logo.svg';\nimport './App.css';\nimport Diagrams from \"./Diagrams\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <h3 className=\"App-title\">Willkommen bei der Langzeitstudie zu Matchmaking mit Kevin</h3>\n            <p>\n              Diese Website veranschaulicht die Langzeitstudie zu Kevin Krätschmer und seiner Auswirkung auf die Qualität der Matchmaking Spiele in \"Counter-Strike: Global Offensive\".\n            </p>\n        </header>\n      \t<Diagrams />\n        <footer className=\"App-footer\">\n          <p>\n            Made with\n            <img src={react_logo} className=\"App-logo-small\" alt=\"React Logo\" /> by{' '}\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/johannesmols/kevin\">Johannes Mols</a>\n          </p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}