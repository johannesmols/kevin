{"version":3,"sources":["config.js","helpers/isoConverter.js","helpers/prepareData.js","components/Diagrams.js","helpers/spreadsheet.js","components/App.js","serviceWorker.js","index.js","logo.svg"],"names":["config","apiKey","discoveryDocs","spreadsheetId","isoCountries","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BV","BR","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HK","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","AN","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SK","SI","SB","SO","ZA","GS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VG","VI","WF","EH","YE","ZM","ZW","arrayAverage","array","reduce","a","b","length","prepareNationalitaetenVerteilung","data","teamOrEnemies","nationalities","forEach","entry","team_land","gegner_land","split","country","push","returnArray","type","role","alreadyCalculatedCountries","nation","includes","percentage","countOccurrences","countryCode","hasOwnProperty","toFixed","value","counter","map","percentageTrue","filter","e","pie_chart_options","is3D","chartArea","left","top","right","bottom","width","height","legend","position","alignment","map_analyse_win_rate","title","isStacked","focusTarget","hAxis","vAxis","minValue","maxValue","series","0","color","1","map_analyse_prime","map_analyse_kevin_hack_call","map_analyse_team_hack_call","map_analyse_kevin_toxicity","map_analyse_team_tilt","geochart_options","keepAspecRatio","region","resolution","displayMode","domain","enableRegionInteractivity","magnifyingGlass","enable","zoomFactor","colorAxis","colors","numberFormat","tilt_options","hack_call_options","trendline_options","viewWindowMode","trendlines","lineWidth","opacity","Diagrams","state","loading","error","entries","results","start","window","gapi","client","init","then","callback","_this","onLoad","load","sheets","spreadsheets","values","get","range","valueRenderOption","response","result","datum","rank","prime","kevin_anwesend","kevin_toxicity","kevin_hack_call","kevin_stats","kevin_hltv_rating","ergebnis","team_hack_call","joe_tilt","jakob_tilt","mika_tilt","match_link","anmerkung","setState","this","react_default","createElement","className","react_spinners","id","Panel","defaultExpanded","Heading","Title","toggle","Collapse","Body","index_esm","chartType","maps","alreadyCountedMaps","prepareMapVerteilung","graph_id","loader","legend_toggle","options","preparedData","sort","localeCompare","processedMaps","currentMap","win_lose","entry2","scores","Number","wins","loses","prepareMapAnalyseWinRate","prime_nonprime","non_prime","prepareMapAnalysePrime","hack_call","non_hack_call","prepareMapAnalyseKevinHackCall","prepareMapAnalyseTeamHackCall","count","prepareMapAnalyseKevinToxicity","tilt","prepareMapAnalyseTeamTilt","joe","joe_k","jakob","jakob_k","mika","mika_k","concat","prepareTiltLevel","kevin","team","team_ohne_kevin","uebereinstimmung","index","kevin_prime","team_prime","team_o_k_hack_call","team_o_k_prime","uebereinstimmung_p","prepareHackCallDatenColumn","prepareHackCallDaten","prepareToxicRatingScatterchart","mapsApiKey","Component","App","src_components_Diagrams","src","react_logo","alt","target","rel","href","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.297ac229.chunk.js","sourcesContent":["export default {\n  apiKey: \"AIzaSyAyM2CDk0xEhuaCFPzkOqE2969JXee6MiM\",\n  discoveryDocs: \n    [\"https://sheets.googleapis.com/$discovery/rest\"],\n  spreadsheetId: \"1OHd_uNLhKvi1kKdUXUlVTKnf_xCQYiWhDqU8jotJyrY\"\n};","let isoCountries = {\n    'AF' : 'Afghanistan',\n    'AX' : 'Aland Islands',\n    'AL' : 'Albania',\n    'DZ' : 'Algeria',\n    'AS' : 'American Samoa',\n    'AD' : 'Andorra',\n    'AO' : 'Angola',\n    'AI' : 'Anguilla',\n    'AQ' : 'Antarctica',\n    'AG' : 'Antigua And Barbuda',\n    'AR' : 'Argentina',\n    'AM' : 'Armenia',\n    'AW' : 'Aruba',\n    'AU' : 'Australia',\n    'AT' : 'Austria',\n    'AZ' : 'Azerbaijan',\n    'BS' : 'Bahamas',\n    'BH' : 'Bahrain',\n    'BD' : 'Bangladesh',\n    'BB' : 'Barbados',\n    'BY' : 'Belarus',\n    'BE' : 'Belgium',\n    'BZ' : 'Belize',\n    'BJ' : 'Benin',\n    'BM' : 'Bermuda',\n    'BT' : 'Bhutan',\n    'BO' : 'Bolivia',\n    'BA' : 'Bosnia And Herzegovina',\n    'BW' : 'Botswana',\n    'BV' : 'Bouvet Island',\n    'BR' : 'Brazil',\n    'IO' : 'British Indian Ocean Territory',\n    'BN' : 'Brunei Darussalam',\n    'BG' : 'Bulgaria',\n    'BF' : 'Burkina Faso',\n    'BI' : 'Burundi',\n    'KH' : 'Cambodia',\n    'CM' : 'Cameroon',\n    'CA' : 'Canada',\n    'CV' : 'Cape Verde',\n    'KY' : 'Cayman Islands',\n    'CF' : 'Central African Republic',\n    'TD' : 'Chad',\n    'CL' : 'Chile',\n    'CN' : 'China',\n    'CX' : 'Christmas Island',\n    'CC' : 'Cocos (Keeling) Islands',\n    'CO' : 'Colombia',\n    'KM' : 'Comoros',\n    'CG' : 'Congo',\n    'CD' : 'Congo, Democratic Republic',\n    'CK' : 'Cook Islands',\n    'CR' : 'Costa Rica',\n    'CI' : 'Cote D\\'Ivoire',\n    'HR' : 'Croatia',\n    'CU' : 'Cuba',\n    'CY' : 'Cyprus',\n    'CZ' : 'Czech Republic',\n    'DK' : 'Denmark',\n    'DJ' : 'Djibouti',\n    'DM' : 'Dominica',\n    'DO' : 'Dominican Republic',\n    'EC' : 'Ecuador',\n    'EG' : 'Egypt',\n    'SV' : 'El Salvador',\n    'GQ' : 'Equatorial Guinea',\n    'ER' : 'Eritrea',\n    'EE' : 'Estonia',\n    'ET' : 'Ethiopia',\n    'FK' : 'Falkland Islands (Malvinas)',\n    'FO' : 'Faroe Islands',\n    'FJ' : 'Fiji',\n    'FI' : 'Finland',\n    'FR' : 'France',\n    'GF' : 'French Guiana',\n    'PF' : 'French Polynesia',\n    'TF' : 'French Southern Territories',\n    'GA' : 'Gabon',\n    'GM' : 'Gambia',\n    'GE' : 'Georgia',\n    'DE' : 'Germany',\n    'GH' : 'Ghana',\n    'GI' : 'Gibraltar',\n    'GR' : 'Greece',\n    'GL' : 'Greenland',\n    'GD' : 'Grenada',\n    'GP' : 'Guadeloupe',\n    'GU' : 'Guam',\n    'GT' : 'Guatemala',\n    'GG' : 'Guernsey',\n    'GN' : 'Guinea',\n    'GW' : 'Guinea-Bissau',\n    'GY' : 'Guyana',\n    'HT' : 'Haiti',\n    'HM' : 'Heard Island & Mcdonald Islands',\n    'VA' : 'Holy See (Vatican City State)',\n    'HN' : 'Honduras',\n    'HK' : 'Hong Kong',\n    'HU' : 'Hungary',\n    'IS' : 'Iceland',\n    'IN' : 'India',\n    'ID' : 'Indonesia',\n    'IR' : 'Iran, Islamic Republic Of',\n    'IQ' : 'Iraq',\n    'IE' : 'Ireland',\n    'IM' : 'Isle Of Man',\n    'IL' : 'Israel',\n    'IT' : 'Italy',\n    'JM' : 'Jamaica',\n    'JP' : 'Japan',\n    'JE' : 'Jersey',\n    'JO' : 'Jordan',\n    'KZ' : 'Kazakhstan',\n    'KE' : 'Kenya',\n    'KI' : 'Kiribati',\n    'KR' : 'Korea',\n    'KW' : 'Kuwait',\n    'KG' : 'Kyrgyzstan',\n    'LA' : 'Lao People\\'s Democratic Republic',\n    'LV' : 'Latvia',\n    'LB' : 'Lebanon',\n    'LS' : 'Lesotho',\n    'LR' : 'Liberia',\n    'LY' : 'Libyan Arab Jamahiriya',\n    'LI' : 'Liechtenstein',\n    'LT' : 'Lithuania',\n    'LU' : 'Luxembourg',\n    'MO' : 'Macao',\n    'MK' : 'Macedonia',\n    'MG' : 'Madagascar',\n    'MW' : 'Malawi',\n    'MY' : 'Malaysia',\n    'MV' : 'Maldives',\n    'ML' : 'Mali',\n    'MT' : 'Malta',\n    'MH' : 'Marshall Islands',\n    'MQ' : 'Martinique',\n    'MR' : 'Mauritania',\n    'MU' : 'Mauritius',\n    'YT' : 'Mayotte',\n    'MX' : 'Mexico',\n    'FM' : 'Micronesia, Federated States Of',\n    'MD' : 'Moldova',\n    'MC' : 'Monaco',\n    'MN' : 'Mongolia',\n    'ME' : 'Montenegro',\n    'MS' : 'Montserrat',\n    'MA' : 'Morocco',\n    'MZ' : 'Mozambique',\n    'MM' : 'Myanmar',\n    'NA' : 'Namibia',\n    'NR' : 'Nauru',\n    'NP' : 'Nepal',\n    'NL' : 'Netherlands',\n    'AN' : 'Netherlands Antilles',\n    'NC' : 'New Caledonia',\n    'NZ' : 'New Zealand',\n    'NI' : 'Nicaragua',\n    'NE' : 'Niger',\n    'NG' : 'Nigeria',\n    'NU' : 'Niue',\n    'NF' : 'Norfolk Island',\n    'MP' : 'Northern Mariana Islands',\n    'NO' : 'Norway',\n    'OM' : 'Oman',\n    'PK' : 'Pakistan',\n    'PW' : 'Palau',\n    'PS' : 'Palestinian Territory, Occupied',\n    'PA' : 'Panama',\n    'PG' : 'Papua New Guinea',\n    'PY' : 'Paraguay',\n    'PE' : 'Peru',\n    'PH' : 'Philippines',\n    'PN' : 'Pitcairn',\n    'PL' : 'Poland',\n    'PT' : 'Portugal',\n    'PR' : 'Puerto Rico',\n    'QA' : 'Qatar',\n    'RE' : 'Reunion',\n    'RO' : 'Romania',\n    'RU' : 'Russian Federation',\n    'RW' : 'Rwanda',\n    'BL' : 'Saint Barthelemy',\n    'SH' : 'Saint Helena',\n    'KN' : 'Saint Kitts And Nevis',\n    'LC' : 'Saint Lucia',\n    'MF' : 'Saint Martin',\n    'PM' : 'Saint Pierre And Miquelon',\n    'VC' : 'Saint Vincent And Grenadines',\n    'WS' : 'Samoa',\n    'SM' : 'San Marino',\n    'ST' : 'Sao Tome And Principe',\n    'SA' : 'Saudi Arabia',\n    'SN' : 'Senegal',\n    'RS' : 'Serbia',\n    'SC' : 'Seychelles',\n    'SL' : 'Sierra Leone',\n    'SG' : 'Singapore',\n    'SK' : 'Slovakia',\n    'SI' : 'Slovenia',\n    'SB' : 'Solomon Islands',\n    'SO' : 'Somalia',\n    'ZA' : 'South Africa',\n    'GS' : 'South Georgia And Sandwich Isl.',\n    'ES' : 'Spain',\n    'LK' : 'Sri Lanka',\n    'SD' : 'Sudan',\n    'SR' : 'Suriname',\n    'SJ' : 'Svalbard And Jan Mayen',\n    'SZ' : 'Swaziland',\n    'SE' : 'Sweden',\n    'CH' : 'Switzerland',\n    'SY' : 'Syrian Arab Republic',\n    'TW' : 'Taiwan',\n    'TJ' : 'Tajikistan',\n    'TZ' : 'Tanzania',\n    'TH' : 'Thailand',\n    'TL' : 'Timor-Leste',\n    'TG' : 'Togo',\n    'TK' : 'Tokelau',\n    'TO' : 'Tonga',\n    'TT' : 'Trinidad And Tobago',\n    'TN' : 'Tunisia',\n    'TR' : 'Turkey',\n    'TM' : 'Turkmenistan',\n    'TC' : 'Turks And Caicos Islands',\n    'TV' : 'Tuvalu',\n    'UG' : 'Uganda',\n    'UA' : 'Ukraine',\n    'AE' : 'United Arab Emirates',\n    'GB' : 'United Kingdom',\n    'US' : 'United States',\n    'UM' : 'United States Outlying Islands',\n    'UY' : 'Uruguay',\n    'UZ' : 'Uzbekistan',\n    'VU' : 'Vanuatu',\n    'VE' : 'Venezuela',\n    'VN' : 'Viet Nam',\n    'VG' : 'Virgin Islands, British',\n    'VI' : 'Virgin Islands, U.S.',\n    'WF' : 'Wallis And Futuna',\n    'EH' : 'Western Sahara',\n    'YE' : 'Yemen',\n    'ZM' : 'Zambia',\n    'ZW' : 'Zimbabwe'\n};\n\nexport function getCountryName (countryCode) {\n    if (isoCountries.hasOwnProperty(countryCode)) {\n        return isoCountries[countryCode];\n    } else {\n        return countryCode;\n    }\n}","import { getCountryName } from \"./isoConverter\";\n\nconst arrayAverage = array => array.reduce((a,b) => a + b, 0) / array.length;\n\nexport function prepareMapVerteilung(data) {\n    // put all maps into an array\n    let maps = [];\n    data.forEach(entry => {\n        maps.push(entry.map);\n    });\n\n    // count how often each map is contained in the array\n    let returnArray = [[\"Maps\", \"Anzahl\"]];\n    let alreadyCountedMaps = [];\n    maps.forEach(map => {\n        if (!alreadyCountedMaps.includes(map)) {\n            returnArray.push([map, countOccurrences(maps, map)]);\n            alreadyCountedMaps.push(map);\n        }\n    });\n    \n    return returnArray;\n}\n\nexport function prepareMapAnalyseWinRate(data) {\n    let preparedData = [['Map', 'Gewonnen', {type: 'string', role: 'tooltip'}, 'Verloren', {type: 'string', role: 'tooltip'}]];\n\n    data.sort((a, b) => a.map.localeCompare(b.map)); // Sort maps alpabetically\n\n    let processedMaps = [];\n    data.forEach(entry => {\n        if (!processedMaps.includes(entry.map)) {\n            let currentMap = entry.map;\n            let win_lose = [0,0];\n\n            data.forEach(entry2 => {\n                if (currentMap === entry2.map && entry2.ergebnis) {\n                    // Ergebnis\n                    let result = entry2.ergebnis;\n                    let scores = result.split(':');\n                    if (Number(scores[0] > Number(scores[1]))) {\n                        win_lose[0]++;\n                    } else if (Number(scores[0] < Number(scores[1]))) {\n                        win_lose[1]++;\n                    } // Ignore ties\n                }\n            });\n\n            let wins = win_lose[0] / (win_lose[0] + win_lose[1]) * 100;\n            let loses = win_lose[1] / (win_lose[0] + win_lose[1]) * 100;\n\n            processedMaps.push(entry.map);\n            preparedData.push([\n                entry.map,\n                wins,\n                wins.toFixed(2) + '% (' + win_lose[0] + ')',\n                loses,\n                loses.toFixed(2) + '% (' + win_lose[1] + ')'\n            ]);\n        }\n    });\n\n    return preparedData;\n}\n\nexport function prepareMapAnalysePrime(data) {\n    let preparedData = [['Map', 'Prime', {type: 'string', role: 'tooltip'}, 'Non-Prime', {type: 'string', role: 'tooltip'}]];\n\n    data.sort((a, b) => a.map.localeCompare(b.map)); // Sort maps alpabetically\n\n    let processedMaps = [];\n    data.forEach(entry => {\n        if (!processedMaps.includes(entry.map)) {\n            let currentMap = entry.map;\n            let prime_nonprime = [0,0];\n\n            data.forEach(entry2 => {\n                if (currentMap === entry2.map) {\n                    // Prime\n                    if (entry2.prime === 'Y') {\n                        prime_nonprime[0]++;\n                    } else {\n                        prime_nonprime[1]++;\n                    }\n                }\n            });\n\n            let prime = prime_nonprime[0] / (prime_nonprime[0] + prime_nonprime[1]) * 100;\n            let non_prime = prime_nonprime[1] / (prime_nonprime[0] + prime_nonprime[1]) * 100;\n\n            processedMaps.push(entry.map);\n            preparedData.push([\n                entry.map,\n                prime,\n                prime.toFixed(2) + '% (' + prime_nonprime[0] + ')',\n                non_prime,\n                non_prime.toFixed(2) + '% (' + prime_nonprime[1] + ')'\n            ]);\n        }\n    });\n\n    return preparedData;\n}\n\nexport function prepareMapAnalyseKevinHackCall(data) {\n    let preparedData = [['Map', 'Ja', {type: 'string', role: 'tooltip'}, 'Nein', {type: 'string', role: 'tooltip'}]];\n\n    data.sort((a, b) => a.map.localeCompare(b.map)); // Sort maps alpabetically\n\n    let processedMaps = [];\n    data.forEach(entry => {\n        if (!processedMaps.includes(entry.map)) {\n            let currentMap = entry.map;\n            let kevin_hack_call = [0,0];\n\n            data.forEach(entry2 => {\n                if (currentMap === entry2.map && entry2.kevin_anwesend === 'Y') {\n                    // Kevin Hack Call\n                    if (entry2.kevin_hack_call === 'Y') {\n                        kevin_hack_call[0]++;\n                    } else {\n                        kevin_hack_call[1]++;\n                    }\n                }\n            });\n\n            let hack_call = kevin_hack_call[0] / (kevin_hack_call[0] + kevin_hack_call[1]) * 100;\n            let non_hack_call = kevin_hack_call[1] / (kevin_hack_call[0] + kevin_hack_call[1]) * 100;\n\n            processedMaps.push(entry.map);\n            preparedData.push([\n                entry.map,\n                hack_call,\n                hack_call.toFixed(2) + '% (' + kevin_hack_call[0] + ')',\n                non_hack_call,\n                non_hack_call.toFixed(2) + '% (' + kevin_hack_call[1] + ')'\n            ]);\n        }\n    });\n\n    return preparedData;\n}\n\nexport function prepareMapAnalyseTeamHackCall(data) {\n    let preparedData = [['Map', 'Ja', {type: 'string', role: 'tooltip'}, 'Nein', {type: 'string', role: 'tooltip'}]];\n\n    data.sort((a, b) => a.map.localeCompare(b.map)); // Sort maps alpabetically\n\n    let processedMaps = [];\n    data.forEach(entry => {\n        if (!processedMaps.includes(entry.map)) {\n            let currentMap = entry.map;\n            let team_hack_call = [0,0];\n\n            data.forEach(entry2 => {\n                if (currentMap === entry2.map) {\n                    // Kevin Hack Call\n                    if (entry2.kevin_hack_call === 'Y') {\n                        team_hack_call[0]++;\n                    } else {\n                        team_hack_call[1]++;\n                    }\n                }\n            });\n\n            let hack_call = team_hack_call[0] / (team_hack_call[0] + team_hack_call[1]) * 100;\n            let non_hack_call = team_hack_call[1] / (team_hack_call[0] + team_hack_call[1]) * 100;\n\n            processedMaps.push(entry.map);\n            preparedData.push([\n                entry.map,\n                hack_call,\n                hack_call.toFixed(2) + '% (' + team_hack_call[0] + ')',\n                non_hack_call,\n                non_hack_call.toFixed(2) + '% (' + team_hack_call[1] + ')'\n            ]);\n        }\n    });\n\n    return preparedData;\n}\n\nexport function prepareMapAnalyseKevinToxicity(data) {\n    let preparedData = [['Map', 'Toxizität', {type: 'string', role: 'tooltip'}]];\n\n    data.sort((a, b) => a.map.localeCompare(b.map)); // Sort maps alpabetically\n\n    let processedMaps = [];\n    data.forEach(entry => {\n        if (!processedMaps.includes(entry.map)) {\n            let currentMap = entry.map;\n            let kevin_toxicity = 0;\n            let count = 0;\n\n            data.forEach(entry2 => {\n                if (currentMap === entry2.map && entry2.kevin_anwesend === 'Y') {\n                    kevin_toxicity += Number(entry2.kevin_toxicity);\n                    count++;\n                }\n            });\n\n            processedMaps.push(entry.map);\n            preparedData.push([\n                entry.map,\n                kevin_toxicity / count,\n                (kevin_toxicity / count).toFixed(2) + ' (ø aus ' + count + ' Spiel(en))'\n            ]);\n        }\n    });\n\n    return preparedData;\n}\n\nexport function prepareMapAnalyseTeamTilt(data) {\n    let preparedData = [['Map', 'Tilt', {type: 'string', role: 'tooltip'}]];\n\n    data.sort((a, b) => a.map.localeCompare(b.map)); // Sort maps alpabetically\n\n    let processedMaps = [];\n    data.forEach(entry => {\n        if (!processedMaps.includes(entry.map)) {\n            let currentMap = entry.map;\n            let tilt = 0;\n            let count = 0;\n\n            data.forEach(entry2 => {\n                if (currentMap === entry2.map) {\n                    if (entry2.joe_tilt) {\n                        tilt += Number(entry2.joe_tilt);\n                        count++;\n                    }\n                    if (entry2.jakob_tilt) {\n                        tilt += Number(entry2.jakob_tilt);\n                        count++;\n                    }\n                    if (entry2.mika_tilt) {\n                        tilt += Number(entry2.mika_tilt);\n                        count++;\n                    }\n                }\n            });\n\n            processedMaps.push(entry.map);\n            preparedData.push([\n                entry.map,\n                tilt / count,\n                (tilt / count).toFixed(2) + ' (ø aus ' + count + ' Werten)'\n            ]);\n        }\n    });\n\n    return preparedData;\n}\n\nexport function prepareNationalitaetenVerteilung(data, teamOrEnemies) {\n    // Nationalitäten in Array machen\n    let nationalities = [];\n    data.forEach(entry => {\n        if ((teamOrEnemies && entry.team_land) || (!teamOrEnemies && entry.gegner_land)) {\n            let splitted = teamOrEnemies ? entry.team_land.split(',') : entry.gegner_land.split(',');\n            splitted.forEach(country => {\n                nationalities.push(country);\n            });\n        }\n    });\n\n    // Prozentzahlen berechnen\n    let returnArray = [[\"Nationalität\", \"Verteilung in Prozent\", {type: 'string', role: 'tooltip'}]];\n    let alreadyCalculatedCountries = [];\n    nationalities.forEach(nation => {\n        if (!alreadyCalculatedCountries.includes(nation)) {\n            let percentage = countOccurrences(nationalities, nation) / nationalities.length * 100;\n            returnArray.push([getCountryName(nation), percentage, percentage.toFixed(2) + '%']);\n            alreadyCalculatedCountries.push(nation);\n        }\n    });\n\n    return returnArray;\n}\n\nexport function prepareTiltLevel(data) {\n    let preparedData = [['Spieler', 'Tilt ohne Kevin', 'Tilt mit Kevin', 'Kombiniert']];\n\n    let joe = [], joe_k = [], jakob = [], jakob_k = [], mika = [], mika_k = [];\n    data.forEach(entry => {\n        if (entry.joe_tilt) {\n            if (entry.kevin_anwesend === 'Y') {\n                joe_k.push(Number(entry.joe_tilt));\n            } else {\n                joe.push(Number(entry.joe_tilt));\n            }\n        }\n        if (entry.jakob_tilt) {\n            if (entry.kevin_anwesend === 'Y') {\n                jakob_k.push(Number(entry.jakob_tilt));\n            } else {\n                jakob.push(Number(entry.jakob_tilt));\n            }\n        }\n        if (entry.mika_tilt) {\n            if (entry.kevin_anwesend === 'Y') {\n                mika_k.push(Number(entry.mika_tilt));\n            } else {\n                mika.push(Number(entry.mika_tilt));\n            }\n        }\n    });\n\n    preparedData.push(['Joe', arrayAverage(joe), arrayAverage(joe_k), arrayAverage(joe.concat(joe_k))]);\n    preparedData.push(['Jakob', arrayAverage(jakob), arrayAverage(jakob_k), arrayAverage(jakob.concat(jakob_k))]);\n    preparedData.push(['Mika', arrayAverage(mika), arrayAverage(mika_k), arrayAverage(mika.concat(mika_k))]);\n    preparedData.push(['Gesamt', arrayAverage(joe.concat(jakob, mika)), arrayAverage(joe_k.concat(jakob_k, mika_k)), arrayAverage(joe.concat(joe_k, jakob, jakob_k, mika, mika_k))]);\n\n    return preparedData;\n}\n\nexport function prepareHackCallDatenColumn(data) {\n    let preparedData = [['Kategorie', 'Hack Call', 'Prime']];\n\n    let kevin = [], team = [], team_ohne_kevin = [], uebereinstimmung = []; \n    data.forEach(entry => {\n        if (entry.kevin_anwesend === 'Y') {\n            kevin.push([entry.kevin_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n        }\n        if (entry.team_hack_call && entry.kevin_anwesend === 'Y') {\n            team.push([entry.team_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n        }\n        if (entry.kevin_anwesend === 'N' && entry.team_hack_call) {\n            team_ohne_kevin.push([entry.team_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n        }\n        if (entry.kevin_anwesend === 'Y') {\n            if ((entry.kevin_hack_call === 'Y' && entry.team_hack_call === 'N') ||\n                (entry.kevin_hack_call === 'N' && entry.team_hack_call === 'N')) \n            {\n                uebereinstimmung.push(true);\n            } else {\n                uebereinstimmung.push(false);\n            }\n        }\n    });\n\n    let kevin_hack_call = percentageTrue(kevin.map(function(value, index) { return value[0] })); // Wie oft Kevin Hack called\n    let kevin_prime = percentageTrue(kevin.filter(e => e[0] === true).map(function(value, index) { return value[1] })); // Wie viele Matches davon Prime waren\n    let team_hack_call = percentageTrue(team.map(function(value, index) { return value[0] })); // Wie oft das Team Hack called\n    let team_prime = percentageTrue(team.filter(e => e[0] === true).map(function(value, index) { return value[1] })); // Wie viele Matches davon Prime waren\n    let team_o_k_hack_call = percentageTrue(team_ohne_kevin.map(function(value, index) { return value[0] })); // Wie oft das Team ohne Kevin Hack called\n    let team_o_k_prime = percentageTrue(team_ohne_kevin.filter(e => e[0] === true).map(function(value, index) { return value[1] })); // Wie viele Matches davon Prime waren\n    let uebereinstimmung_p = percentageTrue(uebereinstimmung);\n    \n    preparedData.push(['Kevin', kevin_hack_call, kevin_prime]);\n    preparedData.push(['Team mit Kevin', team_hack_call, team_prime]);\n    preparedData.push(['Team ohne Kevin', team_o_k_hack_call, team_o_k_prime]);\n    preparedData.push(['Zustimmung mit Kevin' , uebereinstimmung_p, 0]);\n\n    return preparedData;\n}\n\nexport function prepareHackCallDaten(data) {\n    let preparedData = [['From', 'To', 'Weight']];\n\n    let kevin = [], team = [];\n    data.forEach(entry => {\n        if (entry.kevin_anwesend && entry.kevin_hack_call) {\n            kevin.push([entry.kevin_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n            team.push([entry.team_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n        }\n    });\n    \n    preparedData.push(['Kevin', 'Hack Call', kevin.filter(e => e[0] === true).length]);\n    preparedData.push(['Kevin', 'Non-Hack Call', kevin.filter(e => e[0] === false).length]);\n    preparedData.push(['Team', 'Hack Call', team.filter(e => e[0] === true).length]);\n    preparedData.push(['Team', 'Non-Hack Call', team.filter(e => e[0] === false).length]);\n    \n    preparedData.push(['Non-Hack Call', 'Prime', \n        kevin.filter(e => e[0] === false)\n        .concat(team.filter(e => e[0] === false))\n        .filter(e => e[1] === true).length]);\n    preparedData.push(['Non-Hack Call', 'Non-Prime', \n        kevin.filter(e => e[0] === false)\n        .concat(team.filter(e => e[0] === false))\n        .filter(e => e[1] === false).length]);\n    preparedData.push(['Hack Call', 'Prime', \n        kevin.filter(e => e[0] === true)\n        .concat(team.filter(e => e[0] === true))\n        .filter(e => e[1] === true).length]);\n    preparedData.push(['Hack Call', 'Non-Prime', \n        kevin.filter(e => e[0] === true)\n        .concat(team.filter(e => e[0] === true))\n        .filter(e => e[1] === false).length]);\n\n    return preparedData;\n}\n\nexport function prepareToxicRatingScatterchart(data) {\n    let preparedData = [['Toxizität', 'HLTV Rating 1.0']];\n\n    data.forEach(entry => {\n        if (entry.kevin_anwesend === 'Y' && entry.kevin_hltv_rating && entry.kevin_toxicity) {\n            preparedData.push([Number(entry.kevin_toxicity), Number(entry.kevin_hltv_rating)]);\n        }\n    });\n\n    return preparedData;\n}\n\nfunction countOccurrences(data, value) {\n    let counter = 0;\n    data.forEach(map => {\n        if (value === map) {\n            counter++;\n        }\n    });\n    return counter;\n}\n\nfunction percentageTrue(data) {\n    return data.filter(e => e === true).length / data.length * 100;\n}","import React, { Component } from 'react';\nimport './Diagrams.css'\nimport config from '../config';\nimport { PacmanLoader } from 'react-spinners';\nimport { load } from '../helpers/spreadsheet';\nimport { prepareMapVerteilung, prepareNationalitaetenVerteilung, prepareTiltLevel, prepareHackCallDaten, prepareHackCallDatenColumn, prepareToxicRatingScatterchart, prepareMapAnalyseWinRate, prepareMapAnalysePrime, prepareMapAnalyseKevinHackCall, prepareMapAnalyseTeamHackCall, prepareMapAnalyseKevinToxicity, prepareMapAnalyseTeamTilt } from '../helpers/prepareData';\nimport { Chart } from 'react-google-charts';\nimport { Panel } from 'react-bootstrap';\n\nconst pie_chart_options = {\n  is3D: true,\n  chartArea: {\n    left: 20,\n    top: 20,\n    right: 20,\n    bottom: 20,\n    width: '100%',\n    height: '100%'\n  },\n  legend: {\n    position: 'labeled',\n    alignment: 'center'\n  }\n}\n\nconst map_analyse_win_rate = {\n  title: 'Win Rate',\n  isStacked: true,\n  focusTarget: 'category',\n  hAxis: {\n    title: ''\n  },\n  vAxis: {\n    title: 'Prozent (0-100)',\n    minValue: 0,\n    maxValue: 100\n  },\n  series: {\n    0:{color:'#3e8410'},\n    1:{color:'#c44129'}\n  }\n}\n\nconst map_analyse_prime = {\n  title: 'Matches mit Prime aktiviert',\n  isStacked: true,\n  focusTarget: 'category',\n  hAxis: {\n    title: ''\n  },\n  vAxis: {\n    title: 'Prozent (0-100)',\n    minValue: 0,\n    maxValue: 100\n  },\n  series: {\n    0:{color:'#3e8410'},\n    1:{color:'#c44129'}\n  }\n}\n\nconst map_analyse_kevin_hack_call = {\n  title: 'Matches in denen Kevin Hack called',\n  isStacked: true,\n  focusTarget: 'category',\n  hAxis: {\n    title: ''\n  },\n  vAxis: {\n    title: 'Prozent (0-100)',\n    minValue: 0,\n    maxValue: 100\n  },\n  series: {\n    0:{color:'#3e8410'},\n    1:{color:'#c44129'}\n  }\n}\n\nconst map_analyse_team_hack_call = {\n  title: 'Matches in denen das Team Hack called',\n  isStacked: true,\n  focusTarget: 'category',\n  hAxis: {\n    title: ''\n  },\n  vAxis: {\n    title: 'Prozent (0-100)',\n    minValue: 0,\n    maxValue: 100\n  },\n  series: {\n    0:{color:'#3e8410'},\n    1:{color:'#c44129'}\n  }\n}\n\nconst map_analyse_kevin_toxicity = {\n  title: 'Durschnittliche Toxizität von Kevin',\n  isStacked: false,\n  focusTarget: 'category',\n  hAxis: {\n    title: ''\n  },\n  vAxis: {\n    title: 'Toxizität (1-5)',\n    minValue: 1,\n    maxValue: 5\n  },\n  series: {\n    0:{color:'#ec9332'}\n  }\n}\n\nconst map_analyse_team_tilt = {\n  title: 'Durschnittlicher Tilt des gesamten Teams ausgenommen von Kevin',\n  isStacked: false,\n  focusTarget: 'category',\n  hAxis: {\n    title: ''\n  },\n  vAxis: {\n    title: 'Tilt (1-5)',\n    minValue: 1,\n    maxValue: 5\n  },\n  series: {\n    0:{color:'#0560bd'}\n  }\n}\n\nconst geochart_options = {\n  keepAspecRatio: true,\n  region: '150',\n  resolution: 'countries',\n  displayMode: 'regions',\n  domain: 'DE',\n  enableRegionInteractivity: true,\n  magnifyingGlass: {enable: true, zoomFactor: 7.5},\n  colorAxis: {minValue: 0,  colors: ['green', 'orange', 'red']},\n  legend: {\n    numberFormat: '.##'\n  }\n}\n\nconst tilt_options = {\n  title: 'Durschnittliches Tilt Level mit und ohne Kevin',\n  focusTarget: 'category',\n  vAxis: {\n    title: 'Tilt Level (1-5)',\n    minValue: 1\n  }\n}\n\nconst hack_call_options = {\n  title: 'Kevins Hack Quall Quote im Vergleich zum Team',\n  focusTarget: 'category',\n  vAxis: {\n    title: 'Prozent (0-100)',\n    minValue: 0,\n    maxValue: 100\n  }\n}\n\nconst trendline_options = {\n  hAxis: { \n    title: 'Toxizität',\n    minValue: 1,\n    maxValue: 5,\n    viewWindowMode: 'maximized'\n  },\n  vAxis: { \n    title: 'HLTV Rating 1.0'\n  },\n  legend: 'none',\n  trendlines: { 0: {\n      type: 'exponential',\n      lineWidth: 10,\n      opacity: 0.2\n    } \n  }\n}\n\nclass Diagrams extends Component {\n  state = {\n    loading: true,\n    error: null,\n    entries: [],\n    results: 0\n  };\n\n  componentDidMount() {\n    // 1. Load the JavaScript client library\n    window.gapi.load('client', this.start);\n  }\n\n  start = () => {\n    // 2. Initialize the JavaScript client library\n    window.gapi.client\n      .init({\n        apiKey: config.apiKey,\n        discoveryDocs: config.discoveryDocs\n      })\n      // 3. Initialize and make the API request\n      .then(() => {\n        load(this.onLoad);\n      });\n  };\n\n  onLoad = (data, error) => {\n    if (data) {\n      this.setState({\n        entries: data.entries,\n        results: data.entries.length,\n        loading: false\n      })\n    } else {\n      this.setState({ error, loading: false });\n    }\n  };\n\n  render() {\n    // Show Loading\n    if (this.state.loading) {\n      return (\n        <div className=\"Loading\">\n          <PacmanLoader color =\"#6aa84f\" loading={this.state.loading} />\n        </div>\n      )\n    }\n\n    // Display Graphs\n    if (this.state.entries) {\n      return (\n        <div id=\"panels\">\n          <Panel className='panel-bootstrap' id=\"panel-map-verteilung\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Map Verteilung\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"PieChart\"\n                data={prepareMapVerteilung(this.state.entries)}\n                graph_id=\"MapVerteilung\"\n                width=\"100%\"\n                height=\"300px\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={pie_chart_options}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-map-analyse\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Map Analyse\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareMapAnalyseWinRate(this.state.entries)}\n                graph_id=\"MapAnalyseWinRate\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={map_analyse_win_rate}\n              />\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareMapAnalysePrime(this.state.entries)}\n                graph_id=\"MapAnalysePrime\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={map_analyse_prime}\n              />\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareMapAnalyseKevinHackCall(this.state.entries)}\n                graph_id=\"MapAnalyseKevinHackCall\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={map_analyse_kevin_hack_call}\n              />\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareMapAnalyseTeamHackCall(this.state.entries)}\n                graph_id=\"MapAnalyseTeamHackCall\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={map_analyse_team_hack_call}\n              />\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareMapAnalyseKevinToxicity(this.state.entries)}\n                graph_id=\"MapAnalyseKevinToxicity\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={map_analyse_kevin_toxicity}\n              />\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareMapAnalyseTeamTilt(this.state.entries)}\n                graph_id=\"MapAnalyseTeamTilt\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={map_analyse_team_tilt}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-team-tilt-level\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Tilt Level mit und ohne Kevin\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareTiltLevel(this.state.entries)}\n                graph_id=\"TiltLevel\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={tilt_options}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-hack-call\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Kevins Hackcall Quote im Vegleich zum Team\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n            <Chart\n                chartType=\"ColumnChart\"\n                data={prepareHackCallDatenColumn(this.state.entries)}\n                graph_id=\"HackCallColumn\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={hack_call_options}\n              />\n              <Chart\n                chartType=\"Sankey\"\n                data={prepareHackCallDaten(this.state.entries)}\n                graph_id=\"HackCall\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-kevin-toxic-hltv-rating-correlation\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Kevins Toxizität im Kontext seiner Leistung\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"ScatterChart\"\n                data={prepareToxicRatingScatterchart(this.state.entries)}\n                graph_id=\"KevinToxicRatingScatterChart\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={trendline_options}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-gegner-nationalitaeten\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Gegner Nationalitäten\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"GeoChart\"\n                data={prepareNationalitaetenVerteilung(this.state.entries, false)}\n                graph_id=\"GegnerNationalitaeten\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={geochart_options}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-team-nationalitaeten\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Team Nationalitäten\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"GeoChart\"\n                data={prepareNationalitaetenVerteilung(this.state.entries, true)}\n                graph_id=\"TeamNationalitaeten\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={geochart_options}\n                mapsApiKey={config.apiKey}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n        </div>\n      )\n    }\n\n    // Display Error\n    return <div>{this.state.error}</div>;\n  }\n}\n\nexport default Diagrams;","import config from \"../config\";\n\n// Load the data from the spreadsheet\nexport function load(callback) {\n    window.gapi.client.load(\"sheets\", \"v4\", () => {\n        window.gapi.client.sheets.spreadsheets.values\n            .get({\n                spreadsheetId: config.spreadsheetId,\n                range: \"Daten!A6:R\",\n                valueRenderOption: \"FORMATTED_VALUE\"\n            })\n            .then(\n                response => {\n                    const data = response.result.values;\n                    let entries = \n                        data.map(entry => ({\n                            datum: entry[0],\n                            rank: entry[1],\n                            prime: entry[2],\n                            map: entry[3],\n                            team_land: entry[4],\n                            gegner_land: entry[5],\n                            kevin_anwesend: entry[6],\n                            kevin_toxicity: entry[7],\n                            kevin_hack_call: entry[8],\n                            kevin_stats: entry[9],\n                            kevin_hltv_rating: entry[10],\n                            ergebnis: entry[11],\n                            team_hack_call: entry[12],\n                            joe_tilt: entry[13],\n                            jakob_tilt: entry[14],\n                            mika_tilt: entry[15],\n                            match_link: entry[16],\n                            anmerkung: entry[17]\n                        })) || [];\n\n                    callback({\n                        entries\n                    });\n                },\n                response => {\n                    callback(false, response.result.error);\n                }\n            );\n    });\n}","import React, { Component } from 'react';\nimport react_logo from '../logo.svg';\nimport './App.css';\nimport Diagrams from \"./Diagrams\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <h3 className=\"App-title\">Willkommen bei der Langzeitstudie zu Matchmaking mit Kevin</h3>\n            <p>\n              Diese Website veranschaulicht die Langzeitstudie zu Kevin Krätschmer und seiner Auswirkung auf die Qualität der Matchmaking Spiele in \"Counter-Strike: Global Offensive\".\n            </p>\n        </header>\n      \t<Diagrams />\n        <footer className=\"App-footer\">\n          <p>\n            Made with\n            <img src={react_logo} className=\"App-logo-small\" alt=\"React Logo\" /> by{' '}\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/johannesmols/kevin\">Johannes Mols</a>\n          </p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}