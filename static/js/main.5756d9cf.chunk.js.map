{"version":3,"sources":["config.js","helpers/prepareData.js","components/Diagrams.js","helpers/spreadsheet.js","components/App.js","serviceWorker.js","index.js","logo.svg"],"names":["config","apiKey","discoveryDocs","spreadsheetId","arrayAverage","array","reduce","a","b","length","prepareNationalitaetenVerteilung","data","teamOrEnemies","nationalities","forEach","entry","team_land","gegner_land","split","country","push","returnArray","alreadyCalculatedCountries","nation","includes","countOccurrences","value","counter","map","percentageTrue","filter","e","map_analyse_win_rate","title","isStacked","focusTarget","hAxis","vAxis","minValue","maxValue","series","0","color","1","map_analyse_prime","map_analyse_kevin_hack_call","map_analyse_team_hack_call","map_analyse_kevin_toxicity","map_analyse_team_tilt","geochart_options","region","resolution","displayMode","magnifyingGlass","enable","zoomFactor","colorAxis","colors","tilt_options","hack_call_options","trendline_options","viewWindowMode","legend","trendlines","type","lineWidth","opacity","Diagrams","state","loading","error","entries","results","start","window","gapi","client","init","then","callback","_this","onLoad","load","sheets","spreadsheets","values","get","range","valueRenderOption","response","result","datum","rank","prime","kevin_anwesend","kevin_toxicity","kevin_hack_call","kevin_stats","kevin_hltv_rating","ergebnis","team_hack_call","joe_tilt","jakob_tilt","mika_tilt","match_link","anmerkung","setState","this","react_default","createElement","className","react_spinners","id","Panel","defaultExpanded","Heading","Title","toggle","Collapse","Body","index_esm","chartType","maps","alreadyCountedMaps","prepareMapVerteilung","graph_id","width","height","loader","legend_toggle","preparedData","role","sort","localeCompare","processedMaps","currentMap","win_lose","entry2","scores","Number","wins","loses","toFixed","prepareMapAnalyseWinRate","options","prime_nonprime","non_prime","prepareMapAnalysePrime","hack_call","non_hack_call","prepareMapAnalyseKevinHackCall","prepareMapAnalyseTeamHackCall","count","prepareMapAnalyseKevinToxicity","tilt","prepareMapAnalyseTeamTilt","joe","joe_k","jakob","jakob_k","mika","mika_k","concat","prepareTiltLevel","kevin","team","team_ohne_kevin","uebereinstimmung","index","kevin_prime","team_prime","team_o_k_hack_call","team_o_k_prime","uebereinstimmung_p","prepareHackCallDatenColumn","prepareHackCallDaten","prepareToxicRatingScatterchart","Component","App","src_components_Diagrams","src","react_logo","alt","target","rel","href","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5756d9cf.chunk.js","sourcesContent":["export default {\n  apiKey: \"AIzaSyD3HU2wG3tzEK-Zf57BCeVz6FhE7BEwnnA\",\n  discoveryDocs: \n    [\"https://sheets.googleapis.com/$discovery/rest\"],\n  spreadsheetId: \"1OHd_uNLhKvi1kKdUXUlVTKnf_xCQYiWhDqU8jotJyrY\"\n};","const arrayAverage = array => array.reduce((a,b) => a + b, 0) / array.length;\n\nexport function prepareMapVerteilung(data) {\n    // put all maps into an array\n    let maps = [];\n    data.forEach(entry => {\n        maps.push(entry.map);\n    });\n\n    // count how often each map is contained in the array\n    let returnArray = [[\"Maps\", \"Anzahl\"]];\n    let alreadyCountedMaps = [];\n    maps.forEach(map => {\n        if (!alreadyCountedMaps.includes(map)) {\n            returnArray.push([map, countOccurrences(maps, map)]);\n            alreadyCountedMaps.push(map);\n        }\n    });\n    \n    return returnArray;\n}\n\nexport function prepareMapAnalyseWinRate(data) {\n    let preparedData = [['Map', 'Gewonnen', {type: 'string', role: 'tooltip'}, 'Verloren', {type: 'string', role: 'tooltip'}]];\n\n    data.sort((a, b) => a.map.localeCompare(b.map)); // Sort maps alpabetically\n\n    let processedMaps = [];\n    data.forEach(entry => {\n        if (!processedMaps.includes(entry.map)) {\n            let currentMap = entry.map;\n            let win_lose = [0,0];\n\n            data.forEach(entry2 => {\n                if (currentMap === entry2.map && entry2.ergebnis) {\n                    // Ergebnis\n                    let result = entry2.ergebnis;\n                    let scores = result.split(':');\n                    if (Number(scores[0] > Number(scores[1]))) {\n                        win_lose[0]++;\n                    } else if (Number(scores[0] < Number(scores[1]))) {\n                        win_lose[1]++;\n                    } // Ignore ties\n                }\n            });\n\n            let wins = win_lose[0] / (win_lose[0] + win_lose[1]) * 100;\n            let loses = win_lose[1] / (win_lose[0] + win_lose[1]) * 100;\n\n            processedMaps.push(entry.map);\n            preparedData.push([\n                entry.map,\n                wins,\n                wins.toFixed(2) + '% (' + win_lose[0] + ')',\n                loses,\n                loses.toFixed(2) + '% (' + win_lose[1] + ')'\n            ]);\n        }\n    });\n\n    return preparedData;\n}\n\nexport function prepareMapAnalysePrime(data) {\n    let preparedData = [['Map', 'Prime', {type: 'string', role: 'tooltip'}, 'Non-Prime', {type: 'string', role: 'tooltip'}]];\n\n    data.sort((a, b) => a.map.localeCompare(b.map)); // Sort maps alpabetically\n\n    let processedMaps = [];\n    data.forEach(entry => {\n        if (!processedMaps.includes(entry.map)) {\n            let currentMap = entry.map;\n            let prime_nonprime = [0,0];\n\n            data.forEach(entry2 => {\n                if (currentMap === entry2.map) {\n                    // Prime\n                    if (entry2.prime === 'Y') {\n                        prime_nonprime[0]++;\n                    } else {\n                        prime_nonprime[1]++;\n                    }\n                }\n            });\n\n            let prime = prime_nonprime[0] / (prime_nonprime[0] + prime_nonprime[1]) * 100;\n            let non_prime = prime_nonprime[1] / (prime_nonprime[0] + prime_nonprime[1]) * 100;\n\n            processedMaps.push(entry.map);\n            preparedData.push([\n                entry.map,\n                prime,\n                prime.toFixed(2) + '% (' + prime_nonprime[0] + ')',\n                non_prime,\n                non_prime.toFixed(2) + '% (' + prime_nonprime[1] + ')'\n            ]);\n        }\n    });\n\n    return preparedData;\n}\n\nexport function prepareMapAnalyseKevinHackCall(data) {\n    let preparedData = [['Map', 'Ja', {type: 'string', role: 'tooltip'}, 'Nein', {type: 'string', role: 'tooltip'}]];\n\n    data.sort((a, b) => a.map.localeCompare(b.map)); // Sort maps alpabetically\n\n    let processedMaps = [];\n    data.forEach(entry => {\n        if (!processedMaps.includes(entry.map)) {\n            let currentMap = entry.map;\n            let kevin_hack_call = [0,0];\n\n            data.forEach(entry2 => {\n                if (currentMap === entry2.map && entry2.kevin_anwesend === 'Y') {\n                    // Kevin Hack Call\n                    if (entry2.kevin_hack_call === 'Y') {\n                        kevin_hack_call[0]++;\n                    } else {\n                        kevin_hack_call[1]++;\n                    }\n                }\n            });\n\n            let hack_call = kevin_hack_call[0] / (kevin_hack_call[0] + kevin_hack_call[1]) * 100;\n            let non_hack_call = kevin_hack_call[1] / (kevin_hack_call[0] + kevin_hack_call[1]) * 100;\n\n            processedMaps.push(entry.map);\n            preparedData.push([\n                entry.map,\n                hack_call,\n                hack_call.toFixed(2) + '% (' + kevin_hack_call[0] + ')',\n                non_hack_call,\n                non_hack_call.toFixed(2) + '% (' + kevin_hack_call[1] + ')'\n            ]);\n        }\n    });\n\n    return preparedData;\n}\n\nexport function prepareMapAnalyseTeamHackCall(data) {\n    let preparedData = [['Map', 'Ja', {type: 'string', role: 'tooltip'}, 'Nein', {type: 'string', role: 'tooltip'}]];\n\n    data.sort((a, b) => a.map.localeCompare(b.map)); // Sort maps alpabetically\n\n    let processedMaps = [];\n    data.forEach(entry => {\n        if (!processedMaps.includes(entry.map)) {\n            let currentMap = entry.map;\n            let team_hack_call = [0,0];\n\n            data.forEach(entry2 => {\n                if (currentMap === entry2.map) {\n                    // Kevin Hack Call\n                    if (entry2.kevin_hack_call === 'Y') {\n                        team_hack_call[0]++;\n                    } else {\n                        team_hack_call[1]++;\n                    }\n                }\n            });\n\n            let hack_call = team_hack_call[0] / (team_hack_call[0] + team_hack_call[1]) * 100;\n            let non_hack_call = team_hack_call[1] / (team_hack_call[0] + team_hack_call[1]) * 100;\n\n            processedMaps.push(entry.map);\n            preparedData.push([\n                entry.map,\n                hack_call,\n                hack_call.toFixed(2) + '% (' + team_hack_call[0] + ')',\n                non_hack_call,\n                non_hack_call.toFixed(2) + '% (' + team_hack_call[1] + ')'\n            ]);\n        }\n    });\n\n    return preparedData;\n}\n\nexport function prepareMapAnalyseKevinToxicity(data) {\n    let preparedData = [['Map', 'Toxizität', {type: 'string', role: 'tooltip'}]];\n\n    data.sort((a, b) => a.map.localeCompare(b.map)); // Sort maps alpabetically\n\n    let processedMaps = [];\n    data.forEach(entry => {\n        if (!processedMaps.includes(entry.map)) {\n            let currentMap = entry.map;\n            let kevin_toxicity = 0;\n            let count = 0;\n\n            data.forEach(entry2 => {\n                if (currentMap === entry2.map && entry2.kevin_anwesend === 'Y') {\n                    kevin_toxicity += Number(entry2.kevin_toxicity);\n                    count++;\n                }\n            });\n\n            processedMaps.push(entry.map);\n            preparedData.push([\n                entry.map,\n                kevin_toxicity / count,\n                (kevin_toxicity / count).toFixed(2) + ' (ø aus ' + count + ' Spiel(en))'\n            ]);\n        }\n    });\n\n    return preparedData;\n}\n\nexport function prepareMapAnalyseTeamTilt(data) {\n    let preparedData = [['Map', 'Tilt', {type: 'string', role: 'tooltip'}]];\n\n    data.sort((a, b) => a.map.localeCompare(b.map)); // Sort maps alpabetically\n\n    let processedMaps = [];\n    data.forEach(entry => {\n        if (!processedMaps.includes(entry.map)) {\n            let currentMap = entry.map;\n            let tilt = 0;\n            let count = 0;\n\n            data.forEach(entry2 => {\n                if (currentMap === entry2.map) {\n                    if (entry2.joe_tilt) {\n                        tilt += Number(entry2.joe_tilt);\n                        count++;\n                    }\n                    if (entry2.jakob_tilt) {\n                        tilt += Number(entry2.jakob_tilt);\n                        count++;\n                    }\n                    if (entry2.mika_tilt) {\n                        tilt += Number(entry2.mika_tilt);\n                        count++;\n                    }\n                }\n            });\n\n            processedMaps.push(entry.map);\n            preparedData.push([\n                entry.map,\n                tilt / count,\n                (tilt / count).toFixed(2) + ' (ø aus ' + count + ' Werten)'\n            ]);\n        }\n    });\n\n    return preparedData;\n}\n\nexport function prepareNationalitaetenVerteilung(data, teamOrEnemies) {\n    // Nationalitäten in Array machen\n    let nationalities = [];\n    data.forEach(entry => {\n        if ((teamOrEnemies && entry.team_land) || (!teamOrEnemies && entry.gegner_land)) {\n            let splitted = teamOrEnemies ? entry.team_land.split(',') : entry.gegner_land.split(',');\n            splitted.forEach(country => {\n                nationalities.push(country);\n            });\n        }\n    });\n\n    // Prozentzahlen berechnen\n    let returnArray = [[\"Nationalität\", \"Verteilung in Prozent\"]];\n    let alreadyCalculatedCountries = [];\n    nationalities.forEach(nation => {\n        if (!alreadyCalculatedCountries.includes(nation)) {\n            returnArray.push([nation, (countOccurrences(nationalities, nation) / nationalities.length) * 100]);\n            alreadyCalculatedCountries.push(nation);\n        }\n    });\n\n    return returnArray;\n}\n\nexport function prepareTiltLevel(data) {\n    let preparedData = [['Spieler', 'Tilt ohne Kevin', 'Tilt mit Kevin', 'Kombiniert']];\n\n    let joe = [], joe_k = [], jakob = [], jakob_k = [], mika = [], mika_k = [];\n    data.forEach(entry => {\n        if (entry.joe_tilt) {\n            if (entry.kevin_anwesend === 'Y') {\n                joe_k.push(Number(entry.joe_tilt));\n            } else {\n                joe.push(Number(entry.joe_tilt));\n            }\n        }\n        if (entry.jakob_tilt) {\n            if (entry.kevin_anwesend === 'Y') {\n                jakob_k.push(Number(entry.jakob_tilt));\n            } else {\n                jakob.push(Number(entry.jakob_tilt));\n            }\n        }\n        if (entry.mika_tilt) {\n            if (entry.kevin_anwesend === 'Y') {\n                mika_k.push(Number(entry.mika_tilt));\n            } else {\n                mika.push(Number(entry.mika_tilt));\n            }\n        }\n    });\n\n    preparedData.push(['Joe', arrayAverage(joe), arrayAverage(joe_k), arrayAverage(joe.concat(joe_k))]);\n    preparedData.push(['Jakob', arrayAverage(jakob), arrayAverage(jakob_k), arrayAverage(jakob.concat(jakob_k))]);\n    preparedData.push(['Mika', arrayAverage(mika), arrayAverage(mika_k), arrayAverage(mika.concat(mika_k))]);\n    preparedData.push(['Gesamt', arrayAverage(joe.concat(jakob, mika)), arrayAverage(joe_k.concat(jakob_k, mika_k)), arrayAverage(joe.concat(joe_k, jakob, jakob_k, mika, mika_k))]);\n\n    return preparedData;\n}\n\nexport function prepareHackCallDatenColumn(data) {\n    let preparedData = [['Kategorie', 'Hack Call', 'Prime']];\n\n    let kevin = [], team = [], team_ohne_kevin = [], uebereinstimmung = []; \n    data.forEach(entry => {\n        if (entry.kevin_anwesend === 'Y') {\n            kevin.push([entry.kevin_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n        }\n        if (entry.team_hack_call && entry.kevin_anwesend === 'Y') {\n            team.push([entry.team_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n        }\n        if (entry.kevin_anwesend === 'N' && entry.team_hack_call) {\n            team_ohne_kevin.push([entry.team_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n        }\n        if (entry.kevin_anwesend === 'Y') {\n            if ((entry.kevin_hack_call === 'Y' && entry.team_hack_call === 'N') ||\n                (entry.kevin_hack_call === 'N' && entry.team_hack_call === 'N')) \n            {\n                uebereinstimmung.push(true);\n            } else {\n                uebereinstimmung.push(false);\n            }\n        }\n    });\n\n    let kevin_hack_call = percentageTrue(kevin.map(function(value, index) { return value[0] })); // Wie oft Kevin Hack called\n    let kevin_prime = percentageTrue(kevin.filter(e => e[0] === true).map(function(value, index) { return value[1] })); // Wie viele Matches davon Prime waren\n    let team_hack_call = percentageTrue(team.map(function(value, index) { return value[0] })); // Wie oft das Team Hack called\n    let team_prime = percentageTrue(team.filter(e => e[0] === true).map(function(value, index) { return value[1] })); // Wie viele Matches davon Prime waren\n    let team_o_k_hack_call = percentageTrue(team_ohne_kevin.map(function(value, index) { return value[0] })); // Wie oft das Team ohne Kevin Hack called\n    let team_o_k_prime = percentageTrue(team_ohne_kevin.filter(e => e[0] === true).map(function(value, index) { return value[1] })); // Wie viele Matches davon Prime waren\n    let uebereinstimmung_p = percentageTrue(uebereinstimmung);\n    \n    preparedData.push(['Kevin', kevin_hack_call, kevin_prime]);\n    preparedData.push(['Team mit Kevin', team_hack_call, team_prime]);\n    preparedData.push(['Team ohne Kevin', team_o_k_hack_call, team_o_k_prime]);\n    preparedData.push(['Zustimmung mit Kevin' , uebereinstimmung_p, 0]);\n\n    return preparedData;\n}\n\nexport function prepareHackCallDaten(data) {\n    let preparedData = [['From', 'To', 'Weight']];\n\n    let kevin = [], team = [];\n    data.forEach(entry => {\n        if (entry.kevin_anwesend && entry.kevin_hack_call) {\n            kevin.push([entry.kevin_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n            team.push([entry.team_hack_call === 'Y' ? true : false, entry.prime === 'Y' ? true : false]);\n        }\n    });\n    \n    preparedData.push(['Kevin', 'Hack Call', kevin.filter(e => e[0] === true).length]);\n    preparedData.push(['Kevin', 'Non-Hack Call', kevin.filter(e => e[0] === false).length]);\n    preparedData.push(['Team', 'Hack Call', team.filter(e => e[0] === true).length]);\n    preparedData.push(['Team', 'Non-Hack Call', team.filter(e => e[0] === false).length]);\n    \n    preparedData.push(['Non-Hack Call', 'Prime', \n        kevin.filter(e => e[0] === false)\n        .concat(team.filter(e => e[0] === false))\n        .filter(e => e[1] === true).length]);\n    preparedData.push(['Non-Hack Call', 'Non-Prime', \n        kevin.filter(e => e[0] === false)\n        .concat(team.filter(e => e[0] === false))\n        .filter(e => e[1] === false).length]);\n    preparedData.push(['Hack Call', 'Prime', \n        kevin.filter(e => e[0] === true)\n        .concat(team.filter(e => e[0] === true))\n        .filter(e => e[1] === true).length]);\n    preparedData.push(['Hack Call', 'Non-Prime', \n        kevin.filter(e => e[0] === true)\n        .concat(team.filter(e => e[0] === true))\n        .filter(e => e[1] === false).length]);\n\n    return preparedData;\n}\n\nexport function prepareToxicRatingScatterchart(data) {\n    let preparedData = [['Toxizität', 'HLTV Rating 1.0']];\n\n    data.forEach(entry => {\n        if (entry.kevin_anwesend === 'Y' && entry.kevin_hltv_rating && entry.kevin_toxicity) {\n            preparedData.push([Number(entry.kevin_toxicity), Number(entry.kevin_hltv_rating)]);\n        }\n    });\n\n    return preparedData;\n}\n\nfunction countOccurrences(data, value) {\n    let counter = 0;\n    data.forEach(map => {\n        if (value === map) {\n            counter++;\n        }\n    });\n    return counter;\n}\n\nfunction percentageTrue(data) {\n    return data.filter(e => e === true).length / data.length * 100;\n}","import React, { Component } from 'react';\nimport './Diagrams.css'\nimport config from '../config';\nimport { PacmanLoader } from 'react-spinners';\nimport { load } from '../helpers/spreadsheet';\nimport { prepareMapVerteilung, prepareNationalitaetenVerteilung, prepareTiltLevel, prepareHackCallDaten, prepareHackCallDatenColumn, prepareToxicRatingScatterchart, prepareMapAnalyseWinRate, prepareMapAnalysePrime, prepareMapAnalyseKevinHackCall, prepareMapAnalyseTeamHackCall, prepareMapAnalyseKevinToxicity, prepareMapAnalyseTeamTilt } from '../helpers/prepareData';\nimport { Chart } from 'react-google-charts';\nimport { Panel } from 'react-bootstrap';\n\nconst map_analyse_win_rate = {\n  title: 'Win Rate',\n  isStacked: true,\n  focusTarget: 'category',\n  hAxis: {\n    title: ''\n  },\n  vAxis: {\n    title: 'Prozent (0-100)',\n    minValue: 0,\n    maxValue: 100\n  },\n  series: {\n    0:{color:'#3e8410'},\n    1:{color:'#c44129'}\n  }\n}\n\nconst map_analyse_prime = {\n  title: 'Matches mit Prime aktiviert',\n  isStacked: true,\n  focusTarget: 'category',\n  hAxis: {\n    title: ''\n  },\n  vAxis: {\n    title: 'Prozent (0-100)',\n    minValue: 0,\n    maxValue: 100\n  },\n  series: {\n    0:{color:'#3e8410'},\n    1:{color:'#c44129'}\n  }\n}\n\nconst map_analyse_kevin_hack_call = {\n  title: 'Matches in denen Kevin Hack called',\n  isStacked: true,\n  focusTarget: 'category',\n  hAxis: {\n    title: ''\n  },\n  vAxis: {\n    title: 'Prozent (0-100)',\n    minValue: 0,\n    maxValue: 100\n  },\n  series: {\n    0:{color:'#3e8410'},\n    1:{color:'#c44129'}\n  }\n}\n\nconst map_analyse_team_hack_call = {\n  title: 'Matches in denen das Team Hack called',\n  isStacked: true,\n  focusTarget: 'category',\n  hAxis: {\n    title: ''\n  },\n  vAxis: {\n    title: 'Prozent (0-100)',\n    minValue: 0,\n    maxValue: 100\n  },\n  series: {\n    0:{color:'#3e8410'},\n    1:{color:'#c44129'}\n  }\n}\n\nconst map_analyse_kevin_toxicity = {\n  title: 'Durschnittliche Toxizität von Kevin',\n  isStacked: false,\n  focusTarget: 'category',\n  hAxis: {\n    title: ''\n  },\n  vAxis: {\n    title: 'Toxizität (1-5)',\n    minValue: 1,\n    maxValue: 5\n  },\n  series: {\n    0:{color:'#ec9332'}\n  }\n}\n\nconst map_analyse_team_tilt = {\n  title: 'Durschnittlicher Tilt des gesamten Teams ausgenommen von Kevin',\n  isStacked: false,\n  focusTarget: 'category',\n  hAxis: {\n    title: ''\n  },\n  vAxis: {\n    title: 'Tilt (1-5)',\n    minValue: 1,\n    maxValue: 5\n  },\n  series: {\n    0:{color:'#0560bd'}\n  }\n}\n\nconst geochart_options = {\n  region: '150',\n  resolution: 'countries',\n  displayMode: 'auto',\n  magnifyingGlass: {enable: true, zoomFactor: 7.5},\n  colorAxis: {minValue: 0,  colors: ['green', 'orange', 'red']}\n}\n\nconst tilt_options = {\n  title: 'Durschnittliches Tilt Level mit und ohne Kevin',\n  focusTarget: 'category',\n  vAxis: {\n    title: 'Tilt Level (1-5)',\n    minValue: 1\n  }\n}\n\nconst hack_call_options = {\n  title: 'Kevins Hack Quall Quote im Vergleich zum Team',\n  focusTarget: 'category',\n  vAxis: {\n    title: 'Prozent (0-100)',\n    minValue: 0,\n    maxValue: 100\n  }\n}\n\nconst trendline_options = {\n  hAxis: { \n    title: 'Toxizität',\n    minValue: 1,\n    maxValue: 5,\n    viewWindowMode: 'maximized'\n  },\n  vAxis: { \n    title: 'HLTV Rating 1.0'\n  },\n  legend: 'none',\n  trendlines: { 0: {\n      type: 'exponential',\n      lineWidth: 10,\n      opacity: 0.2\n    } \n  }\n}\n\nclass Diagrams extends Component {\n  state = {\n    loading: true,\n    error: null,\n    entries: [],\n    results: 0\n  };\n\n  componentDidMount() {\n    // 1. Load the JavaScript client library\n    window.gapi.load('client', this.start);\n  }\n\n  start = () => {\n    // 2. Initialize the JavaScript client library\n    window.gapi.client\n      .init({\n        apiKey: config.apiKey,\n        discoveryDocs: config.discoveryDocs\n      })\n      // 3. Initialize and make the API request\n      .then(() => {\n        load(this.onLoad);\n      });\n  };\n\n  onLoad = (data, error) => {\n    if (data) {\n      this.setState({\n        entries: data.entries,\n        results: data.entries.length,\n        loading: false\n      })\n    } else {\n      this.setState({ error, loading: false });\n    }\n  };\n\n  render() {\n    // Show Loading\n    if (this.state.loading) {\n      return (\n        <div className=\"Loading\">\n          <PacmanLoader color =\"#6aa84f\" loading={this.state.loading} />\n        </div>\n      )\n    }\n\n    // Display Graphs\n    if (this.state.entries) {\n      return (\n        <div id=\"panels\">\n          <Panel className='panel-bootstrap' id=\"panel-map-verteilung\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Map Verteilung\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"PieChart\"\n                data={prepareMapVerteilung(this.state.entries)}\n                graph_id=\"MapVerteilung\"\n                width=\"100%\"\n                height=\"400px\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-map-analyse\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Map Analyse\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareMapAnalyseWinRate(this.state.entries)}\n                graph_id=\"MapAnalyseWinRate\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={map_analyse_win_rate}\n              />\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareMapAnalysePrime(this.state.entries)}\n                graph_id=\"MapAnalysePrime\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={map_analyse_prime}\n              />\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareMapAnalyseKevinHackCall(this.state.entries)}\n                graph_id=\"MapAnalyseKevinHackCall\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={map_analyse_kevin_hack_call}\n              />\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareMapAnalyseTeamHackCall(this.state.entries)}\n                graph_id=\"MapAnalyseTeamHackCall\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={map_analyse_team_hack_call}\n              />\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareMapAnalyseKevinToxicity(this.state.entries)}\n                graph_id=\"MapAnalyseKevinToxicity\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={map_analyse_kevin_toxicity}\n              />\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareMapAnalyseTeamTilt(this.state.entries)}\n                graph_id=\"MapAnalyseTeamTilt\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={map_analyse_team_tilt}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-team-tilt-level\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Tilt Level mit und ohne Kevin\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"ColumnChart\"\n                data={prepareTiltLevel(this.state.entries)}\n                graph_id=\"TiltLevel\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={tilt_options}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-hack-call\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Kevins Hackcall Quote im Vegleich zum Team\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n            <Chart\n                chartType=\"ColumnChart\"\n                data={prepareHackCallDatenColumn(this.state.entries)}\n                graph_id=\"HackCallColumn\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={hack_call_options}\n              />\n              <Chart\n                chartType=\"Sankey\"\n                data={prepareHackCallDaten(this.state.entries)}\n                graph_id=\"HackCall\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-kevin-toxic-hltv-rating-correlation\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Kevins Toxizität im Kontext seiner Leistung\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"ScatterChart\"\n                data={prepareToxicRatingScatterchart(this.state.entries)}\n                graph_id=\"KevinToxicRatingScatterChart\"\n                width=\"100%\"\n                height=\"100%\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={trendline_options}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-gegner-nationalitaeten\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Gegner Nationalitäten\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"GeoChart\"\n                data={prepareNationalitaetenVerteilung(this.state.entries, false)}\n                graph_id=\"GegnerNationalitaeten\"\n                width=\"100%\"\n                height=\"500px\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={geochart_options}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n\n        <Panel className='panel-bootstrap' id=\"panel-team-nationalitaeten\" defaultExpanded>\n          <Panel.Heading>\n            <Panel.Title toggle>\n              Team Nationalitäten\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <Panel.Body>\n              <Chart\n                chartType=\"GeoChart\"\n                data={prepareNationalitaetenVerteilung(this.state.entries, true)}\n                graph_id=\"TeamNationalitaeten\"\n                width=\"100%\"\n                height=\"500px\"\n                loader={<div>Loading Chart</div>}\n                legend_toggle={true}\n                options={geochart_options}\n              />\n            </Panel.Body>\n          </Panel.Collapse>\n        </Panel>\n        </div>\n      )\n    }\n\n    // Display Error\n    return <div>{this.state.error}</div>;\n  }\n}\n\nexport default Diagrams;","import config from \"../config\";\n\n// Load the data from the spreadsheet\nexport function load(callback) {\n    window.gapi.client.load(\"sheets\", \"v4\", () => {\n        window.gapi.client.sheets.spreadsheets.values\n            .get({\n                spreadsheetId: config.spreadsheetId,\n                range: \"Daten!A6:R\",\n                valueRenderOption: \"FORMATTED_VALUE\"\n            })\n            .then(\n                response => {\n                    const data = response.result.values;\n                    let entries = \n                        data.map(entry => ({\n                            datum: entry[0],\n                            rank: entry[1],\n                            prime: entry[2],\n                            map: entry[3],\n                            team_land: entry[4],\n                            gegner_land: entry[5],\n                            kevin_anwesend: entry[6],\n                            kevin_toxicity: entry[7],\n                            kevin_hack_call: entry[8],\n                            kevin_stats: entry[9],\n                            kevin_hltv_rating: entry[10],\n                            ergebnis: entry[11],\n                            team_hack_call: entry[12],\n                            joe_tilt: entry[13],\n                            jakob_tilt: entry[14],\n                            mika_tilt: entry[15],\n                            match_link: entry[16],\n                            anmerkung: entry[17]\n                        })) || [];\n\n                    callback({\n                        entries\n                    });\n                },\n                response => {\n                    callback(false, response.result.error);\n                }\n            );\n    });\n}","import React, { Component } from 'react';\nimport react_logo from '../logo.svg';\nimport './App.css';\nimport Diagrams from \"./Diagrams\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <h3 className=\"App-title\">Willkommen bei der Langzeitstudie zu Matchmaking mit Kevin</h3>\n            <p>\n              Diese Website veranschaulicht die Langzeitstudie zu Kevin Krätschmer und seiner Auswirkung auf die Qualität der Matchmaking Spiele in \"Counter-Strike: Global Offensive\".\n            </p>\n        </header>\n      \t<Diagrams />\n        <footer className=\"App-footer\">\n          <p>\n            Made with\n            <img src={react_logo} className=\"App-logo-small\" alt=\"React Logo\" /> by{' '}\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/johannesmols/kevin\">Johannes Mols</a>\n          </p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}